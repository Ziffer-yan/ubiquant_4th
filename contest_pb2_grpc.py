# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import contest_pb2 as contest__pb2


class ContestStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.login = channel.unary_unary(
        '/Contest/login',
        request_serializer=contest__pb2.LoginRequest.SerializeToString,
        response_deserializer=contest__pb2.UserLoginResponse.FromString,
        )
    self.submit_answer = channel.unary_unary(
        '/Contest/submit_answer',
        request_serializer=contest__pb2.AnswerRequest.SerializeToString,
        response_deserializer=contest__pb2.AnswerResponse.FromString,
        )


class ContestServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def login(self, request, context):
    """A user must first register and acquire a valid user ID and PIN and session key
    NOTE: every time you will get a random session key, all answer must submit along with this key
    this provent user login in multiply times and submit multiply answers
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def submit_answer(self, request, context):
    """Requests a full update of the user data.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ContestServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'login': grpc.unary_unary_rpc_method_handler(
          servicer.login,
          request_deserializer=contest__pb2.LoginRequest.FromString,
          response_serializer=contest__pb2.UserLoginResponse.SerializeToString,
      ),
      'submit_answer': grpc.unary_unary_rpc_method_handler(
          servicer.submit_answer,
          request_deserializer=contest__pb2.AnswerRequest.FromString,
          response_serializer=contest__pb2.AnswerResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Contest', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
